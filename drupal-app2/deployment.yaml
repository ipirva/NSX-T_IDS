apiVersion: v1
kind: Secret
metadata:
  name: mysql-pass
type: Opaque
data:
  password: dGVzdA==
# mysql
---
apiVersion: v1
kind: Service
metadata:
  name: drupal-mysql
  labels:
    app: drupal
spec:
  ports:
    - port: 3306
      name: mysql
      targetPort: 3306
  selector:
    app: drupal
    tier: backend
  type: ClusterIP
--- 
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: drupal-pvc-mysql
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi  
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: drupal-mysql
  labels:
    app: drupal        
spec:
  replicas: 1
  selector:
    matchLabels:
      app: drupal
      tier: backend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: drupal
        tier: backend
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - compute-2
      containers:
      - image: mysql:5
        args:
        - "--ignore-db-dir=lost+found"
        imagePullPolicy: IfNotPresent
        name: mysql
        env:
        - name: MYSQL_DATABASE
          value: drupal-db
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-pass
              key: password
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-stateful-storage
          mountPath: /var/lib/mysql
      volumes:
        - name: mysql-stateful-storage
          persistentVolumeClaim:
            claimName: drupal-pvc-mysql
# drupal
---
apiVersion: v1
kind: Service
metadata:
  name: drupal 
  labels:
    app: drupal
spec:
  ports:
    - port: 80
      name: web
      targetPort: 80
  selector:
    app: drupal
    tier: frontend
  type: LoadBalancer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: drupal-pvc-drupal
  labels:
    app: drupal
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: drupal
  labels:
    app: drupal
    tier: frontend
spec:
  selector:
    matchLabels:
      app: drupal
      tier: frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: drupal
        tier: frontend
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - compute-1
      initContainers:
        - name: init-sites-volume
          image: ipirva/drupal:7.0
          imagePullPolicy: Always
          command: ['/bin/bash', '-c']
          args: ['cp -r /var/www/html/sites /data; chown www-data:www-data /data/ -R']
          volumeMounts:
          - mountPath: /data
            name: drupal-pvc
      containers:
      - image: ipirva/drupal:7.0
        imagePullPolicy: Always
        name: drupal
        env:
        - name: DRUPAL_DATABASE_HOST
          value: drupal-mysql
        - name: DRUPAL_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-pass
              key: password
        ports:
        - containerPort: 80
          name: drupal
      volumes:
        - name: drupal-pvc
          persistentVolumeClaim:
            claimName: drupal-pvc-drupal